version: '3.8'

services:

  nginx:
    image: nginx
    ports:
      - 80:80
    volumes:
      - './services/nginx/nginx.conf:/etc/nginx/nginx.conf'
    depends_on:
      - backend
      - frontend

  backend:
    build: ./services/backend-v2
    env_file:
      - python.env
    volumes:
      - ./services/backend-v2:/app
    command: uvicorn src.main:app --reload --host 0.0.0.0 --port 5000 --root-path /api
    depends_on:
      - db

  sender:
    build: ./services/backend-sender-v2
    env_file:
      - python.env
    volumes:
      - ./services/backend-v2/src/models:/app/src/models
      - ./services/backend-sender-v2:/app
    command: python src/main.py
    depends_on:
      - db
  
  bot:
    build: ./services/backend-bot
    env_file:
      - python.env
    volumes:
      - ./services/backend-v2/src/models:/app/src/models
      - ./services/backend-bot:/app
    command: python src/main.py
    depends_on:
      - db

  frontend:
    build: 
      context: ./services/frontend-v4
      dockerfile: 'Dockerfile'
    env_file:
      - front.env
    volumes:
      - './services/frontend-v4:/usr/src/app'
      - /usr/src/app/node_modules
    ports:
      - "127.0.0.1:8000:80"

  db:
    image: postgres:15.1
    ports:
      - 127.0.0.1:5432:5432
    env_file:
      - db.env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
# /var/lib/postgresql/data/pg_hba.conf edit for remote connection
volumes:
  postgres_data:
